/*
base-jump 0.0.0 - A leap forward for your base JavaScript objects
Built on 2014-07-28
*/

function BinaryTree(){var a=this;a.rootNode=null,a.add=function(b){var c=new BinaryTreeNode;c.value=b;var d;if(null===a.rootNode)a.rootNode=c;else for(d=a.rootNode;;)if(b<d.value){if(null===d.leftNode){d.leftNode=c;break}d=d.leftNode}else{if(!(b>d.value))break;if(null===d.rightNode){d.rightNode=c;break}d=d.rightNode}}}function BinaryTreeNode(){var a=this;a.value=null,a.leftNode=null,a.rightNode=null}!function(){Array.prototype.insertBefore=function(a,b){if(a>this.length-1||0>a)throw new Error("Index out of range");this.splice(a,0,b)},Array.prototype.insertAfter=function(a,b){if(a>this.length-1||0>a)throw new Error("Index out of range");this.splice(a+1,0,b)},Array.prototype.removeAt=function(a){if(a>this.length-1||0>a)throw new Error("Index out of range");this.splice(a,1)},Array.prototype.removeAll=function(){for(;this.length>0;)this.pop()},Array.prototype.copy=function(){for(var a=[],b=0;b<this.length;b++)a.push(this[b]);return a}}(),function(){function a(a){var b={};for(var c in a)"function"!=typeof a[c]&&(b[c]=a[c]);return b}Object.defineProperty(Object.prototype,"copy",{value:function(){return a(this)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isArray",{value:function(){return"[object Array]"===Object.prototype.toString.call(this)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isFunction",{value:function(){return"function"==typeof this},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isNumber",{value:function(){return!isNaN(parseFloat(this))},writable:!0,configurable:!0,enumrable:!1}),Object.defineProperty(Object.prototype,"isString",{value:function(){return"[object String]"===Object.prototype.toString.call(this)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isBoolean",{value:function(){return"[object Boolean]"===Object.prototype.toString.call(this)},writeable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"toNumber",{value:function(){return parseFloat(this.replace(/,/g,"").match(/(\+|-)?((\d+(\.\d+)?)|(\.\d+))/),10)},writable:!0,configurable:!0,enumerable:!1})}();var BJ=BJ||{};Object.defineProperty(BJ,"version",{value:"0.0.1",writable:!1,enumerable:!1});