// #Base Jump 0.0.1
// **A leap forward for your JavaScript objects.**

function copyObject(a){var b={};for(var c in a)"function"!=typeof a[c]&&(b[c]=a[c]);return b}var BJ=BJ||{};Object.defineProperty(BJ,"version",{value:"0.0.1",writable:!1,enumerable:!1}),Array.prototype.insertBefore=function(a,b){if(a>this.length-1||0>a)throw new Error("Index out of range");this.splice(a,0,b)},Array.prototype.insertAfter=function(a,b){if(a>this.length-1||0>a)throw new Error("Index out of range");this.splice(a+1,0,b)},Array.prototype.removeAt=function(a){if(a>this.length-1||0>a)throw new Error("Index out of range");this.splice(a,1)},Array.prototype.removeAll=function(){for(;this.length>0;)this.pop()},Array.prototype.copy=function(){for(var a=[],b=0;b<this.length;b++)a.push(this[b]);return a},BJ.BinaryTreeNode=function(a,b){var c=this;c.key=a,c.value=b||null,c.leftNode=null,c.rightNode=null},BJ.BinaryTree=function(){var a=this;return a.array=[],a.addNodesInOrder=function(b){null!==b.leftNode&&a.addNodesInOrder(b.leftNode),a.array.push(b.value),null!==b.rightNode&&a.addNodesInOrder(b.rightNode)},function(){var b=this;b.rootNode=null,b.addNode=function(a,c,d){if(null===b.rootNode)b.rootNode=new BJ.BinaryTreeNode(a,c);else{var e=new BJ.BinaryTreeNode(a,c);if(("undefined"==typeof d||null===d)&&(d=b.rootNode),a<d.key)null===d.leftNode?d.leftNode=e:b.addNode(a,c,d.leftNode);else{if(!(a>d.key))throw new Error("key must be unique");null===d.rightNode?d.rightNode=e:b.addNode(a,c,d.rightNode)}}},b.getNode=function(a,c){return null===b.rootNode?void 0:(("undefined"==typeof c||null===c)&&(c=b.rootNode),a<c.key?null===c.leftNode?void 0:c.leftNode.key===a?c.leftNode:b.getNode(a,c.leftNode):a>c.key?null===c.rightNode?void 0:c.rightNode.key===a?c.rightNode:b.getNode(a,c.rightNode):c)},b.toArray=function(){a.array=[];var c=b.rootNode;return null===c?a.array:(a.addNodesInOrder(c),a.array)}}}(),Object.defineProperty(Object.prototype,"copy",{value:function(){return copyObject(this)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isArray",{value:function(){return"[object Array]"===Object.prototype.toString.call(this)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isFunction",{value:function(){return"function"==typeof this},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isNumber",{value:function(){return!isNaN(parseFloat(this))},writable:!0,configurable:!0,enumrable:!1}),Object.defineProperty(Object.prototype,"hasNumber",{value:function(){return!isNaN(parseFloat(this.toString().replace(/,/g,"").match(/(\+|-)?((\d+(\.\d+)?)|(\.\d+))/),10))},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isString",{value:function(){return"[object String]"===Object.prototype.toString.call(this)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"isBoolean",{value:function(){return"[object Boolean]"===Object.prototype.toString.call(this)},writeable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"toNumber",{value:function(){return parseFloat(this.toString().replace(/,/g,"").match(/(\+|-)?((\d+(\.\d+)?)|(\.\d+))/),10)},writable:!0,configurable:!0,enumerable:!1}),Object.defineProperty(Object.prototype,"toBoolean",{value:function(){return this.isNumber()&&"0"!==this.toString()||this.isString()&&"true"===this.toString().trim().toLowerCase()},writable:!0,configuration:!0,enumerable:!1});